"""
Django settings for Aleucos project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from loguru import logger
from django.contrib import messages

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-+h&p&bd5(yw&^ka!&-v@kz6!za%#qpzrvtky&9r(x#@)e)7bw('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'users',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'django_elasticsearch_dsl',

    'products',
    'orders',
    'carts', 
    'amo_webhooks',
]

SESSION_ENGINE = 'django.contrib.sessions.backends.signed_cookies'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'carts.middleware.CartMiddleware',
]

# MIDDLEWARE_CLASSES = [
#     'carts.middleware.CartMiddleware',
# ]

ROOT_URLCONF = 'Aleucos.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Aleucos.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'aleucos',
        'USER': 'admin', 
        'PASSWORD': 'admin', 
        'HOST': "db", 
        'PORT': "5432" 
    }
}

# Для запуска PostgreSQL вне Docker
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'aleucos',
#         'USER': 'admin', 
#         'PASSWORD': 'admin', 
#         'HOST': "localhost", 
#         'PORT': "5439" 
#     }
# }


ELASTICSEARCH_DSL = {
    'default': {
        'hosts': 'http://elasticsearch:9200', 
        'timeout': 60,
    }
}

# Для запуска Django вне Docker
# ELASTICSEARCH_DSL = {
#     'default': {
#         'hosts': 'http://localhost:9200', 
#         'timeout': 60,
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = '/var/www/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

MEDIA_URL = 'media/'
MEDIA_ROOT = 'media/'
DEFAULT_IMAGE_PATH = 'products/default.png'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Redis 
REDIS_HOST = 'redis' 
REDIS_PORT = '6379' 

# Для запуска Redis вне Docker
# REDIS_HOST = 'localhost' 
# REDIS_PORT = '6390' 


# Celery
CELERY_BROKER_URL = f'redis://{REDIS_HOST}:{REDIS_PORT}/0'
CELERY_BROKER_TRANSPORT_OPTIONS = {'visibility_timeout': 3600} 
CELERY_RESULT_BACKEND = f'redis://{REDIS_HOST}:{REDIS_PORT}/0'
CELERY_ACCEPT_CONTENT = ['application/json'] 
CELERY_TASK_SERIALIZER = 'json' 
CELERY_RESULT_SERIALIZER = 'json' 
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True


# Loguru 
logger.add("logs/logs.log", format='{time} {level} {message}', rotation="10 MB", compression="zip", level="DEBUG")


# Messages
MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}


ELASTICSEARCH_SYNC = True


AUTH_USER_MODEL = 'users.User'
LOGIN_REDIRECT_URL = '/'  
LOGOUT_REDIRECT_URL = '/'


# Group names
ADMINS_GROUP_NAME = 'Administrators'
MANAGERS_GROUP_NAME = 'Managers'
USERS_GROUP_NAME = 'Users' 

# Статусы заказов. "статус в amoCRM": "статус в БД"
ORDER_STATUS_NAME_CONVERTER = {
    'Первичный контакт': 'В обработке', 
    'Рабочий контакт': 'В обработке', 
    'КП отправлено': 'В обработке', 
    'Клиент прислал заказ': 'В обработке', 
    'Товар собран': 'Комплектация заказа', 
    'Оплата получена': 'Оплата получена', 
    'Отгружено в рассрочку': 'Транспортировка', 
    'Товар отправлен/передан': 'Транспортировка', 
    'Товар отправлен/передан': 'Транспортировка', 
    'Успешно реализовано': 'Заказ принят',
}


ORDER_STATUS_FIRST = 'В обработке'
LEAD_STATUS_FIRST = 'Клиент прислал заказ'
LEAD_STATUS_LAST = 'Успешно реализовано'

# Email
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')

DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
SERVER_EMAIL = EMAIL_HOST_USER
EMAIL_ADMIN = EMAIL_HOST_USER


IMPORT_CATALOG_FILENAME = 'catalog.xlsx'
EXPORT_CATALOG_FILENAME = 'catalog_for_export.xlsx'
EXPORT_CATALOG_TEMPLATE_FILENAME = 'catalog_template.xlsx'