"""
Django settings for Aleucos project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from loguru import logger
from django.contrib import messages
import dotenv


dotenv.load_dotenv()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-+h&p&bd5(yw&^ka!&-v@kz6!za%#qpzrvtky&9r(x#@)e)7bw('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

CSRF_TRUSTED_ORIGINS = [
    'http://*.82.97.252.179',
]


# Application definition

INSTALLED_APPS = [
    'users',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'django_elasticsearch_dsl',

    'configs',

    'home',
    'products',
    'orders',
    'carts', 
    'amo_webhooks',
    'contacts'
]

SESSION_ENGINE = 'django.contrib.sessions.backends.signed_cookies'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'carts.middleware.CartMiddleware',
]


ROOT_URLCONF = 'Aleucos.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                'home.context_processors.global_context',
            ],
        },
    },
]

WSGI_APPLICATION = 'Aleucos.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'aleucos',
        'USER': 'admin', 
        'PASSWORD': 'admin', 
        'HOST': "db", 
        'PORT': "5432" 
    }
}

# Для локальной разработки
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'aleucos',
#         'USER': 'admin', 
#         'PASSWORD': 'admin', 
#         'HOST': "127.0.0.1", 
#         'PORT': "5433" 
#     }
# }


ELASTICSEARCH_DSL = {
    'default': {
        'hosts': 'http://elasticsearch:9200', 
        'timeout': 60,
    }
}

# Для локальной разработки
# ELASTICSEARCH_DSL = {
#     'default': {
#         'hosts': 'http://localhost:9200', 
#         'timeout': 60,
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Asia/Vladivostok'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = 'var/www/static'
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
DEFAULT_IMAGE_PATH = 'products/default.png'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Redis 
REDIS_HOST = 'redis' 

# Для локальной разработки
# REDIS_HOST = 'localhost' 

REDIS_PORT = '6379' 


# Celery
CELERY_BROKER_URL = f'redis://{REDIS_HOST}:{REDIS_PORT}/0'
CELERY_BROKER_TRANSPORT_OPTIONS = {'visibility_timeout': 3600} 
CELERY_RESULT_BACKEND = f'redis://{REDIS_HOST}:{REDIS_PORT}/0'
CELERY_ACCEPT_CONTENT = ['application/json'] 
CELERY_TASK_SERIALIZER = 'json' 
CELERY_RESULT_SERIALIZER = 'json' 
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True


# Loguru 
logger.add("logs/logs.log", 
           format='{time} {level} {message}', 
           rotation="10 MB", 
           retention="7 days",
           compression="zip", 
           level="DEBUG", 
           enqueue=True)


# Messages
MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}


ELASTICSEARCH_SYNC = False


AUTH_USER_MODEL = 'users.User'
LOGIN_REDIRECT_URL = '/'  
LOGOUT_REDIRECT_URL = '/' 


# Email
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')

DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
SERVER_EMAIL = EMAIL_HOST_USER
EMAIL_ADMIN = EMAIL_HOST_USER


# # Логирование

import logging
import logging.config
from pythonjsonlogger import jsonlogger

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,

    'formatters': {
        'json': {
            '()': 'Aleucos.elastic_log_handler.UTCJsonFormatter',
            'format': '%(asctime)s %(levelname)s %(name)s %(message)s %(event_type)s %(data)s',
            'datefmt': '%Y-%m-%dT%H:%M:%S'
        },
    },

    'handlers': {
        'business_elastic': {
            'level': 'INFO',
            'class': 'Aleucos.elastic_log_handler.ElasticLogHandler',
            'formatter': 'json',
            'host': 'http://elasticsearch:9200',
            'index': 'business-logs',
        },
    },

    'loggers': {
        'business': {
            'handlers': ['business_elastic'],
            'level': 'INFO',
            'propagate': False,
        },
    }
}